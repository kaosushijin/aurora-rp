I'll search the project knowledge to understand the codebase structure and the remodularization plan.Let me search for more information about the GitHub repository structure and the actual codebase.Now let me search for specific information about the current implementation issues with paths and imports.Based on my analysis of the project knowledge, I can see that the codebase has been remodularized but there are path reference issues. The main problem is that `main.py` is looking for prompt files in the parent directory (`../`) when according to the plan, everything should be in the root directory.

## Project Plan for Claude Sonnet 4 Implementation

### **Current Issues Identified:**

1. **Prompt Path Issue**: `main.py` is configured to load prompts from parent directory (`../critrules.prompt`) instead of the same directory
2. **Module Import Structure**: The code appears to be looking for modules in subdirectories based on the error messages shown
3. **Inconsistent Directory References**: Some files reference "remod-staging/" while the goal is a flat root structure

### **Implementation Tasks:**

#### **Task 1: Fix Prompt Loading Paths in main.py**
**File**: `main.py`
**Changes Required**:
- Update `PROMPT_FILES` dictionary to load from current directory instead of parent
- Change from `Path("../critrules.prompt")` to `Path("critrules.prompt")`
- Apply same change for `companion.prompt` and `lowrules.prompt`
- Update validation messages to reflect correct path

#### **Task 2: Verify Module Import Paths**
**Files**: All Python modules
**Changes Required**:
- Ensure all imports use direct module names without subdirectory paths
- Remove any references to subdirectories in import statements
- Verify `sys.path` manipulation is correctly adding current directory

#### **Task 3: Clean Up Directory References**
**Files**: `main.py`, `orch.py`, documentation strings
**Changes Required**:
- Remove references to "remod-staging/" directory
- Update documentation strings to reflect root directory structure
- Ensure all file operations use current directory paths

#### **Task 4: Validate Module Dependencies**
**Files**: All module files
**Changes Required**:
- Verify each module imports from the same directory
- Ensure no circular dependencies exist
- Confirm hub-and-spoke pattern is maintained (only `orch.py` imports `mcp.py`)

### **Step-by-Step Implementation Guide for Sonnet:**

1. **Start with main.py**:
   - Locate the `PROMPT_FILES` dictionary (around line 65-69)
   - Change all Path() calls to use current directory
   - Update error messages in `validate_prompt_files()` function

2. **Check all import statements**:
   - Review each `.py` file's imports
   - Ensure imports are simple: `from module import Class`
   - No paths like `from subdir.module import Class`

3. **Update documentation strings**:
   - Remove mentions of subdirectories
   - Clarify that all files are in root directory

4. **Test the import chain**:
   - `main.py` → `orch.py` → all spoke modules
   - Verify no import errors occur

### **Validation Checklist:**
- [ ] All prompt files load from same directory as Python files
- [ ] All module imports use flat structure (no subdirectories)
- [ ] Documentation reflects flat file structure
- [ ] Hub-and-spoke architecture maintained (only orch.py accesses mcp.py)
- [ ] No references to parent directories or subdirectories remain

### **Expected Final Structure:**
```
aurora-rp/
├── main.py              # Loads prompts from ./ not ../
├── orch.py              # Imports modules from ./ not subdirs
├── mcp.py               # Only imported by orch.py
├── ncui.py              # Imports uilib from ./
├── uilib.py             # No external dependencies
├── emm.py               # Standard library only
├── sme.py               # Standard library only
├── sem.py               # Standard library only
├── critrules.prompt     # In same directory as .py files
├── lowrules.prompt      # In same directory as .py files
├── companion.prompt     # In same directory as .py files
└── [other files]
```

This plan provides a clear, actionable roadmap for Claude Sonnet 4 to implement the required changes. The main focus is correcting the path references so all files load from the same root directory rather than using parent directory or subdirectory references.
